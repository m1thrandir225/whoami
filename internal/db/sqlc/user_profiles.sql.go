// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.29.0
// source: user_profiles.sql

package db

import (
	"context"

	"github.com/jackc/pgx/v5/pgtype"
)

const createUserProfile = `-- name: CreateUserProfile :one
INSERT INTO user_profiles (
  user_id,
  first_name,
  last_name,
  phone,
  avatar_url,
  bio,
  timezone,
  locale
) VALUES (
  $1,
  $2,
  $3,
  $4,
  $5,
  $6,
  $7,
  $8
) RETURNING id, user_id, first_name, last_name, phone, avatar_url, bio, timezone, locale, created_at, updated_at
`

type CreateUserProfileParams struct {
	UserID    int64       `json:"user_id"`
	FirstName pgtype.Text `json:"first_name"`
	LastName  pgtype.Text `json:"last_name"`
	Phone     pgtype.Text `json:"phone"`
	AvatarUrl pgtype.Text `json:"avatar_url"`
	Bio       pgtype.Text `json:"bio"`
	Timezone  pgtype.Text `json:"timezone"`
	Locale    pgtype.Text `json:"locale"`
}

func (q *Queries) CreateUserProfile(ctx context.Context, arg CreateUserProfileParams) (UserProfile, error) {
	row := q.db.QueryRow(ctx, createUserProfile,
		arg.UserID,
		arg.FirstName,
		arg.LastName,
		arg.Phone,
		arg.AvatarUrl,
		arg.Bio,
		arg.Timezone,
		arg.Locale,
	)
	var i UserProfile
	err := row.Scan(
		&i.ID,
		&i.UserID,
		&i.FirstName,
		&i.LastName,
		&i.Phone,
		&i.AvatarUrl,
		&i.Bio,
		&i.Timezone,
		&i.Locale,
		&i.CreatedAt,
		&i.UpdatedAt,
	)
	return i, err
}

const getUserProfile = `-- name: GetUserProfile :one
SELECT id, user_id, first_name, last_name, phone, avatar_url, bio, timezone, locale, created_at, updated_at FROM user_profiles WHERE user_id = $1
`

func (q *Queries) GetUserProfile(ctx context.Context, userID int64) (UserProfile, error) {
	row := q.db.QueryRow(ctx, getUserProfile, userID)
	var i UserProfile
	err := row.Scan(
		&i.ID,
		&i.UserID,
		&i.FirstName,
		&i.LastName,
		&i.Phone,
		&i.AvatarUrl,
		&i.Bio,
		&i.Timezone,
		&i.Locale,
		&i.CreatedAt,
		&i.UpdatedAt,
	)
	return i, err
}

const updateUserProfile = `-- name: UpdateUserProfile :exec
UPDATE user_profiles
SET first_name = $2, last_name = $3, phone = $4, avatar_url = $5, bio = $6, timezone = $7, locale = $8
WHERE user_id = $1
`

type UpdateUserProfileParams struct {
	UserID    int64       `json:"user_id"`
	FirstName pgtype.Text `json:"first_name"`
	LastName  pgtype.Text `json:"last_name"`
	Phone     pgtype.Text `json:"phone"`
	AvatarUrl pgtype.Text `json:"avatar_url"`
	Bio       pgtype.Text `json:"bio"`
	Timezone  pgtype.Text `json:"timezone"`
	Locale    pgtype.Text `json:"locale"`
}

func (q *Queries) UpdateUserProfile(ctx context.Context, arg UpdateUserProfileParams) error {
	_, err := q.db.Exec(ctx, updateUserProfile,
		arg.UserID,
		arg.FirstName,
		arg.LastName,
		arg.Phone,
		arg.AvatarUrl,
		arg.Bio,
		arg.Timezone,
		arg.Locale,
	)
	return err
}
